import camelot.io as camelot
import os
import textract
import json


single_pdfs_path = "single_pdfs/"

pdfs = os.listdir(single_pdfs_path)
print(pdfs)

for pdf in pdfs:
    tables = camelot.read_pdf('{}{}'.format(single_pdfs_path,pdf))
    print(tables)
    tables.export('foo.json', f='json', compress=True) # json, excel, html, markdown, sqlite
    print(tables[0])
    print(tables[0].parsing_report)
    print(tables[0].to_json('foo.json')) # to_json, to_excel, to_html, to_markdown, to_sqlite
    print(tables[0].df) # get a pandas DataFrame!
        #, encoding='ascii'
    text = textract.process('{}{}'.format(single_pdfs_path,pdf), encoding='ascii')

    # print(text)
    with open('pdf-text.txt','wb') as f:
        f.write(text)


    # print only those lines starting with "IB"
    result = []
    def name_year_func():
        f = open("pdf-text.txt", 'r')
        s = f.readlines()
        for i in s:
            if 'IB' in i:
                result.append(i.strip())
                print(i)
                break
            else:
                continue
    name_year_func()

    print(result)
    result = "".join(result)

        # with open("name.txt", "r+") as fp:
        #     # access each line
        #     for line in fp:
        #         # check line number
        #         if i in lines:
        #             result.append(line.strip())
        #         i = i + 1
    with open('name_year','w') as g:
        g.write(str(result))


    with open('name_year','r') as g:
        result = g.readline()
        

    # result = list(result)
    print("resulte" , result )
    name_and_year = result

    name_and_year = name_and_year.split(" - ")
    print(name_and_year)

    name = name_and_year[1]
    year = name_and_year[0]

    name = name.strip()
    name = name.upper()
    # year = year.replace(".XLSX","")
    year = year.strip()
    print("Year: "+ year, "Name: " + name)




    # Open the data generated by Camelot and make the name as the head of the json file
    with open('foo.json') as d:
            userdata = json.load(d)
            # name  = "Kojo"
            new_userdata = {name: userdata}
            # Serializing json
            user_data = json.dumps(new_userdata, indent=4)

    # Write this new name and replace an old one
    with open('single_user_data.json', 'w') as outfile:

        outfile.write(user_data)

    # Now read this into a var named user?
    with open("single_user_data.json", "r") as json_file:

        user = json.load(json_file)
        # year = "DP2"

    # day = 1
    # period = '4'
    # print(user['STUDENTS']['ABdul-mubs'][1][period])

        # with open('final_testNew.json', 'r+') as jfile:
        #     j = json.load(jfile)
        #     user_data['STUDENTS'] = userdata
        #     jfile.seek(0)
        #     json.dump(j, jfile, indent=4)
        # with open('final_testNew.json', 'r') as f:
        #     json_data = json.load(f)
        #     print( json_data.values() )# View Previous entries)
        #     json_data.update(user_data)

        # Unnamed: 0

        
    # Now add it to the final file.json and add year group
        ########## Update STUDENTS #############
    with open('final_students.json', 'r+') as file:
        data = json.load(file)
        data['STUDENTS'].update(user)
        data['STUDENTS'][name][0]['0'] = year
        file.seek(0)
        json.dump(data, file, indent=4)
